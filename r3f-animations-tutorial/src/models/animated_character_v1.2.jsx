/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/models/animated_character_v1.2.glb 
*/

import React, { useEffect, useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { useCharacterAnimations } from '../contexts/CharacterAnimations'

export default function Character(props) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('./models/animated_character_v1.2.glb')
  const { actions, names } = useAnimations(animations, group)

  // show animation name and play animation
  console.log(names)
  useEffect(() => {
    // actions[names[0]].reset().fadeIn(0.5).play();
  }, [])

  // use context
  const { setAnimations, animationsIndex } = useCharacterAnimations()
  useEffect(() => {
    setAnimations(names)
  }, [names])

  useEffect(() => {
    console.log('animationsIndex: ', animationsIndex)
    actions[names[animationsIndex]].reset().fadeIn(0.5).play()
    return ()=> {
      actions[names[animationsIndex]].fadeOut(0.5)
    }
  }, [animationsIndex])
  

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="KayKit_Animated_Character">
        <group name="KayKit_Animated_Character_1">
          <primitive object={nodes.Body} />
          <skinnedMesh name="PrototypePete" 
            geometry={nodes.PrototypePete.geometry} 
            material={materials.PrototypePete} 
            skeleton={nodes.PrototypePete.skeleton} 
            castShadow  
          />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('./models/animated_character_v1.2.glb')
